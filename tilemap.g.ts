// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 
2 2 2 . . . . . . . . . . 2 2 2 
2 2 . . . . 2 2 . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
. . . . . 2 . . . . . . . . 2 2 
. . . . . 2 . . . . . . . . 2 2 
. . . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . 2 2 2 
2 . . . . 2 . . . . . . 2 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 2 2 2 2 2 2 2 2 . . . . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia,sprites.castle.tileDarkGrass1,sprites.dungeon.floorLight0], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`1000100001010504040404040302010101010102010105010101010101020101090101020101050101020202020201010101010201010201010202020101010101010102010102010102020202010101020101020101020101010208020101010201010201010201010101010201010102010902010102010101010102020101020101020101020207010101020101010201010201010102020202020101090102010102010101020109010101010101020101020101010201010101010101010201010601010102010101010101010102010106010101020101010109010101020101020101010101010101010101010202020201010101010101010101010101010202`, img`
. . . . . . . . . 2 . . . . . 2 
. . . . . . . . . 2 . . . . . 2 
. . . . . 2 2 2 2 2 . . . . . 2 
. . 2 . . 2 2 2 . . . . . . . 2 
. . 2 . . 2 2 2 2 . . . 2 . . 2 
. . 2 . . . 2 . 2 . . . 2 . . 2 
. . 2 . . . . . 2 . . . 2 . . 2 
. . 2 . . . . . 2 2 . . 2 . . 2 
. . 2 2 . . . . 2 . . . 2 . . 2 
. . . 2 2 2 2 2 . . . . 2 . . 2 
. . . 2 . . . . . . . . 2 . . 2 
. . . 2 . . . . . . . . 2 . . . 
. . . 2 . . . . . . . . 2 . . . 
. . . 2 . . . . . . . . 2 . . 2 
. . . . . . . . . . . . 2 2 2 2 
. . . . . . . . . . . . . . 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.forestTiles0,sprites.castle.tilePath9,sprites.castle.tilePath8,sprites.castle.tilePath4,sprites.castle.tileDarkGrass3,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.chestClosed,sprites.castle.tileGrass1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 . . . . . . 2 2 2 2 2 2 
. . . 2 . . . . . . 2 2 2 2 2 2 
. . 2 2 2 2 2 2 . . 2 2 . 2 2 2 
. 2 2 . . . . . . . . . . 2 2 2 
. 2 . . . . . . . . . . . 2 2 2 
. 2 . . . 2 2 . . . . . . . 2 2 
. 2 . . . . 2 2 . . . . 2 2 2 2 
. 2 . . . . . 2 . . . 2 2 2 . . 
. 2 2 2 . . . 2 . . . 2 2 2 . . 
2 2 2 2 . . . 2 . . . 2 2 . . . 
. . . . . . 2 . . . 2 2 2 . . 2 
. . . . . . 2 2 . . 2 2 2 . . 2 
2 2 2 2 2 2 2 2 . . . . . . . 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.castle.tileDarkGrass1,sprites.dungeon.collectibleRedCrystal,sprites.castle.tileGrass2,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.darkGroundNorthEast1,sprites.castle.tileDarkGrass2,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`1000100006050d0505050d0505050d0505050d0307010101010101010101010101010104071101010101010101010101010101040701010106030101010101010101010e0f010101070401010111010101010102070101010704050505050505030101020701010107040b0b0b0b0b0b0a01010e071201010704010101010101010111020f01010107040101010101010101010207010101070401010101010101010102070101010704010106050505050505020701010107040101090b0b0b0b0b0b020f0101010704010101010101010c0102070101010704010101010101010101020701010107041101010101010101010207080808070405050505050510101002`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 2 2 2 2 2 2 2 . . 2 
2 . . . 2 2 2 2 2 2 2 2 2 . . 2 
2 2 . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 . . 2 2 2 2 2 2 2 2 
2 . . . 2 2 . . 2 2 2 2 2 2 2 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 . . . . . . . . . 2 
2 . . . 2 2 2 2 2 2 2 2 . . . 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.purpleOuterEast1,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterWest0,sprites.dungeon.collectibleInsignia,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.chestClosed,sprites.dungeon.purpleOuterNorth2,sprites.dungeon.purpleOuterEast2,sprites.dungeon.purpleOuterWest2,sprites.dungeon.stairSouth,sprites.dungeon.floorLight1,sprites.castle.rock2], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level13":
            case "level13":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level14":
            case "level14":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.floorDark0,sprites.dungeon.floorLight3,sprites.dungeon.floorDark1,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex`0800080002010304040201030a080705050908060a050b05050b05060a050505050505060a050505050505060a05050505050c060a0d0505050505060908080808080807`, img`
2 2 2 . . 2 2 2 
2 2 2 . . 2 2 2 
2 . 2 . . 2 . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.stairSouth,sprites.builtin.brick,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterWest1,sprites.castle.shrub,sprites.dungeon.floorLight0,sprites.dungeon.doorLockedNorth], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
